{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 5182e8377fd275bbe6fe","webpack:///./src/callfire-api-client-js.js","webpack:///external \"swagger-client\""],"names":["Swagger","require","CallfireClient","login","password","options","Object","assign","validateCredentials","swaggerClient","url","swaggerUrl","authorizations","basicAuth","PasswordAuthorization","usePromise","resolve","reject","then","client","apis","catch","error","Error","basePath","exports","module"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;;;;;AAEA,KAAMA,UAAU,mBAAAC,CAAQ,CAAR,CAAhB;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAmCMC,c;AAEJ,2BAAYC,KAAZ,EAAmBC,QAAnB,EAA6BC,OAA7B,EAAsC;AAAA;;AACpCC,YAAOC,MAAP,CAAc,IAAd,EAAoBF,WAAW,EAA/B;AACAH,oBAAeM,mBAAf,CAAmCL,KAAnC,EAA0CC,QAA1C;;AAEA,UAAKK,aAAL,GAAqB,IAAIT,OAAJ,CAAY;AAC/BU,YAAKR,eAAeS,UAAf,EAD0B;AAE/BC,uBAAgB;AACdC,oBAAW,IAAIb,QAAQc,qBAAZ,CAAkCX,KAAlC,EAAyCC,QAAzC;AADG,QAFe;AAK/BW,mBAAY;AALmB,MAAZ,CAArB;AAOD;;AAED;;;;;;;;;2BAKMC,O,EAASC,M,EAAQ;AAAA;;AACrB,YAAKR,aAAL,CAAmBS,IAAnB,CAAwB,UAACC,MAAD,EAAY;AAClCb,gBAAOC,MAAP,QAAoBY,OAAOC,IAAP,IAAe,EAAnC;AACAJ,iBAAQG,MAAR;AACD,QAHD,EAIGE,KAJH,CAIS,UAACC,KAAD,EAAW;AAChBL,gBAAOK,KAAP;AACD,QANH;AAOD;;AAED;;;;;;;;;yCAM2BnB,K,EAAOC,Q,EAAU;AAC1C,WAAID,SAAS,WAAT,IAAwBA,SAAS,IAAjC,IAAyCC,YAAY,WAArD,IAAoEA,YAAY,IAApF,EAA0F;AACxF,eAAM,IAAImB,KAAJ,CAAU,kCAAV,CAAN;AACD;AACF;;AAED;;;;;;;;gCAKkB;AAChB,cAAO,8BAAP;AACD;;AAED;;;;;;;;kCAKoB;AAClB,cAAOrB,eAAesB,QAAf,KAA4B,uBAAnC;AACD;;;;;;AAGHC,WAAUC,OAAOD,OAAP,GAAiBvB,cAA3B,C;;;;;;ACpGA,gD","file":"callfire-api-client-js.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"swagger-client\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"swagger-client\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"CallfireClient\"] = factory(require(\"swagger-client\"));\n\telse\n\t\troot[\"CallfireClient\"] = factory(root[\"swagger-client\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 5182e8377fd275bbe6fe\n **/","'use strict';\n\nconst Swagger = require('swagger-client');\n\n/**\n * Construct API client for CallFire API v2\n *\n * @param {string} login - API login\n * @param {string} password - API password\n * @param {Object} options - client options. debug: true - enables additional logging\n *\n * @returns {CallfireClient}\n *\n * <b>Authentication:</b> the CallFire API V2 uses HTTP Basic Authentication to verify\n * the user of an endpoint. A generated username/password API credential from your\n * account settings is required.\n * </p>\n * <b>Errors:</b> codes in the 400s range detail all of the errors a CallFire Developer could\n * encounter while using the API. Bad Request, Rate Limit Reached, and Unauthorized\n * are some of the sorts of responses in the 400s block. Codes in the 500s range are\n * error responses from the CallFire system. If an error has occurred anywhere in\n * the execution of a resource that was not due to user input, a 500 response\n * will be returned with a corresponding JSON error body. In that body will contain a message\n * detailing what went wrong.\n * API may return following response codes:\n * <ul>\n * <li>400 - Bad request, the request was formatted improperly.</li>\n * <li>401 - Unauthorized, API Key missing or invalid.</li>\n * <li>403 - Forbidden, insufficient permissions.</li>\n * <li>404 - NOT FOUND, the resource requested does not exist.</li>\n * <li>500 - Internal Server Error.</li>\n * </ul>\n *\n * @author Vladimir Mikhailov (email: vmikhailov@callfire.com)\n * @see <a href=\"https://developers.callfire.com/docs.html\">Callfire API documentation</a>\n * @see <a href=\"https://developers.callfire.com/learn.html\">HowTos and examples</a>\n * @see <a href=\"http://stackoverflow.com/questions/tagged/callfire\">Stackoverflow community questions</a>\n * @since 0.0.1\n */\nclass CallfireClient {\n\n  constructor(login, password, options) {\n    Object.assign(this, options || {});\n    CallfireClient.validateCredentials(login, password);\n\n    this.swaggerClient = new Swagger({\n      url: CallfireClient.swaggerUrl(),\n      authorizations: {\n        basicAuth: new Swagger.PasswordAuthorization(login, password),\n      },\n      usePromise: true\n    });\n  }\n\n  /**\n   * Method instantiates API client and connects to swagger-enabled API\n   *\n   * @return {Swagger}\n   */\n  ready(resolve, reject) {\n    this.swaggerClient.then((client) => {\n      Object.assign(this, client.apis || {});\n      resolve(client);\n    })\n      .catch((error) => {\n        reject(error)\n      });\n  }\n\n  /**\n   * Validates API credentials\n   *\n   * @param login API login\n   * @param password API password\n   */\n  static validateCredentials(login, password) {\n    if (login == 'undefined' || login == null || password == 'undefined' || password == null) {\n      throw new Error('API credentials cannot be empty.');\n    }\n  }\n\n  /**\n   * Returns base API path\n   *\n   * @return {string}\n   */\n  static basePath() {\n    return 'https://api.callfire.com/v2/';\n  }\n\n  /**\n   * Returns path to Swagger spec\n   *\n   * @return {string}\n   */\n  static swaggerUrl() {\n    return CallfireClient.basePath() + 'api-docs/swagger.json';\n  }\n}\n\nexports = module.exports = CallfireClient;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/callfire-api-client-js.js\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"swagger-client\"\n ** module id = 1\n ** module chunks = 0\n **/"],"sourceRoot":""}